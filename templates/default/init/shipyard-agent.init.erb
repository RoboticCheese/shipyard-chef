#!/bin/bash
#
# This file generated by Chef for <%= node['fqdn'] %>
# Changes to it will be overwritten
#
# shipyard-agent Startup script for shipyard-agent
#
# chkconfig: 2345 80 30
# description: Shipyard is a web UI and container management tool for Docker
# processname: shipyard-agent
# config: /etc/default/shipyard-agent

### BEGIN INIT INFO
# Provides: shipyard-agent
# Required-Start: $local_fs $network $remote_fs
# Required-Stop: $local_fs $network $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop shipyard-agent
# Description Shipyard is a web UI and container management tool for Docker
### END INIT INFO

# Source function library
. /etc/rc.d/init.d/functions

# Agent config
. /etc/default/shipyard-agent

RETVAL=0
prog=shipyard-agent
pidfile=/var/run/$prog

start() {
    echo -n "Starting $prog: "
    daemon $prog $SHIPYARD_AGENT_OPTIONS
    RETVAL=$?
    [ $RETVAL = 0 ] && touch $pidfile && success || failure
    echo
    return $RETVAL
}

stop() {
    echo -n "Stopping $prog: "
    killproc $prog
    RETVAL=$?
    [ $RETVAL = 0 ] && rm $pidfile && success || failure
    echo
    return $RETVAL
}

restart() {
    stop
    start
}

reload() {
    echo -n "Reloading $prog: "
    killproc $prog -HUP
    RETVAL=$?
    [ $RETVAL = 0 ] && success || failure
    echo
    return $RETVAL
}

# See how we were called
case $1 in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    reload)
        [ status = 0 ] || exit 7
        reload
        ;;
    status)
        status $prog
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|status}"
        exit 2
esac

exit $?
